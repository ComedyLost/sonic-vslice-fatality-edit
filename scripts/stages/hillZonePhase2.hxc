import flixel.FlxG;
import flixel.FlxSprite;
import flixel.util.FlxTimer;
import flixel.tweens.FlxEase;
import flixel.tweens.FlxTween;
import funkin.Paths;
import funkin.FunkinMemory;
import funkin.play.PlayState;
import funkin.play.stage.Stage;
import funkin.play.stage.StageProp;
import funkin.play.character.BaseCharacter;
import funkin.audio.FunkinSound;
import funkin.graphics.FunkinSprite;
import funkin.graphics.video.FunkinVideoSprite;
import funkin.modding.module.ModuleHandler;

class HillZonePhase2 extends Stage {
    public function new() {
        super("hillZonePhase2");
    }

    public var doScreenStatic:Bool = true;

    public var doRedVignette:Bool = false;

    // Black things
    public var blackOverlay:FlxSprite;
	public var topBorder:FlxSprite;
	public var bottomBorder:FlxSprite;

    // Visual effects
    public var staticScreen:FunkinSprite;
    public var redVignette:FunkinSprite;
    
    // Props
    public var greenHill:StageProp;

    public var estaguyAnimation:FunkinVideoSprite;

    override function onCreate(event:ScriptEvent):Void {
        super.onCreate(event);

        FunkinMemory.cacheSound(Paths.sound("staticBUZZ", "shared"));

        greenHill = getNamedProp('GreenHill');

        // Jumpscares, static, etc
		staticScreen = FunkinSprite.createSparrow(100, 0, "daSTAT");
        staticScreen.animation.addByPrefix('static', 'staticFLASH', 30, false); // Speed it up
        staticScreen.animation.play('static');
		staticScreen.scale.set(FlxG.onMobile ? 6.15 : 5, FlxG.onMobile ? 5.1 : 5);
        staticScreen.zIndex = 5000;
		staticScreen.cameras = [PlayState.instance.camHUD];
		staticScreen.visible = false;
		staticScreen.animation.finishCallback = function() {
            staticScreen.visible = false;
        };
		PlayState.instance.add(staticScreen);

		redVignette = FunkinSprite.create(0, 0, 'RedVG');
		redVignette.zIndex = 1000;
        redVignette.scale.set(FlxG.onMobile ? 1.4 : 1, 1);
		redVignette.cameras = [PlayState.instance.camHUD];
        redVignette.alpha = 0;
		PlayState.instance.add(redVignette);

        blackOverlay = new FlxSprite(0, 0);
        blackOverlay.makeGraphic(FlxG.width, FlxG.height, 0xFF000000);
        blackOverlay.scrollFactor.set();
        blackOverlay.cameras = [PlayState.instance.camCutscene];
        blackOverlay.zIndex = 5000;
        blackOverlay.alpha = 0;
        PlayState.instance.add(blackOverlay);

        estaguyAnimation = new FunkinVideoSprite(0, 0);
        estaguyAnimation.cameras = [PlayState.instance.camCutscene];
        estaguyAnimation.zIndex = 5001;
        estaguyAnimation.bitmap.volumeAdjust = 0;
        estaguyAnimation.load('videos/videos/ycrencoreanimation.mp4');
    }
    function startVideo():Void {
        estaguyAnimation.play();
        PlayState.instance.add(estaguyAnimation);
        new FlxTimer().start(14.2, function(timer:FlxTimer) { // The video is 14 seconds long
            PlayState.instance.remove(estaguyAnimation);
		});
    }
    public function screenStatic():Void {
        if (!doScreenStatic) return;

		staticScreen.visible = true;
		staticScreen.animation.play('static');
		var staticScreenSound = FunkinSound.playOnce(Paths.sound("staticBUZZ"), 0.6);
		FlxTween.tween(staticScreenSound, { volume: 0 }, 1, {
			onComplete: function(tween:FlxTween) {
				staticScreenSound.stop();
			}
		});
    }
    public function switchStageArea(area:String):Void {
        switch (area) {
            case "greenHill":
                greenHill.zIndex = 2;
			    PlayState.instance.currentStage.refresh();
                return;
            case "normal":
                greenHill.zIndex = -50;
			    PlayState.instance.currentStage.refresh();
                return;
            default:
                return;
        }
    }
    override function buildStage()
	{
		super.buildStage();

		if (FlxG.onMobile) {
			getNamedProp('RunSky').scale.set(1.18, 1);
			getNamedProp('RunGround').scale.set(1.19, 1);
			getNamedProp('RunTopOverlay').scale.set(1.135, 1);
			getNamedProp('RunTrees').scale.set(1.14, 1);
			getNamedProp('RunBG').scale.set(1.19, 1);
			getNamedProp('GreenHill').scale.set(9.6, 9);
		}
	}
    function doVignette():Void {
        if (!doRedVignette) return;

        redVignette.visible = true;
        redVignette.alpha = 0;

        FlxTween.tween(redVignette, { alpha: 0.5 }, 0.75, {
            ease: FlxEase.quadInOut,
            onComplete: function(tween:FlxTween) {
                FlxTween.tween(redVignette, { alpha: 0 }, 0.75, {
                    ease: FlxEase.quadInOut,
                    onComplete: function(tween:FlxTween) {
                        redVignette.visible = false;
                    }
                });
            }
        });        
    }
    override function onSongRetry(event:ScriptEvent):Void {
		super.onSongRetry(event);

        doRedVignette = false;
        switchStageArea("normal");
	}

    function onStepHit(event:SongTimeScriptEvent):Void {
        super.onStepHit(event);

        dad = PlayState.instance.currentStage.getDad();

        if (event.beat == 2 || event.beat % 35 == 0)
		{
            screenStatic();
		}
        if (event.step >= 80 && event.step % 20 == 0) {
            doRedVignette = true;
            doVignette();
        }

        // DEFAULT
        if (PlayState.instance.currentVariation == "default") {
            switch (event.step) {
                case 527:
                    switchStageArea("greenHill");
                    screenStatic();
                    doRedVignette = false;
                case 783:
                    switchStageArea("normal");
                    screenStatic();
                    doRedVignette = true;
            }
        }
        
        // ENCORE
        if (PlayState.instance.currentVariation == "encore") {
            switch (event.step) {
                case 528:
                    dad.x = dad.x + 700;
                    dad.y = dad.y + 900;
                    switchStageArea("greenHill");
                    screenStatic();
                    doRedVignette = false;
                case 784:
                    switchStageArea("normal");
                    screenStatic();
                    doRedVignette = true;
                case 1296:
                    FlxTween.tween(blackOverlay, { alpha: 1 }, 1);
                case 1310:
                    startVideo();
            }
        }
    }
}