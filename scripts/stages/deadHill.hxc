import flixel.FlxG;
import flixel.util.FlxTimer;
import funkin.audio.FunkinSound;
import funkin.graphics.FunkinSprite;
import funkin.modding.events.ScriptEvent;
import funkin.modding.module.ModuleHandler;
import funkin.play.PlayState;
import funkin.play.stage.Stage;

class DeadHill extends Stage
{
	var healthReductionTimer:FlxTimer = null;
	var initialMaxHealth:Float = 2.0;
	var currentMaxHealth:Float = 2.0;
	var healthReductionRate:Float = 0.03;
	var healthReductionInterval:Float = 3.5;
	var healthReductionStarted:Bool = false;

	public function new()
	{
		super('deadHill');
	}

	override function onCreate(event:ScriptEvent):Void {
		super.onCreate(event);

		if (PlayState.instance.currentSong.id.toLowerCase() != "black-sun") return;

		initialMaxHealth = PlayState.instance.healthBar != null ? PlayState.instance.healthBar.max : 2.0;
		currentMaxHealth = initialMaxHealth;
		healthReductionStarted = false;
	}
	
	override function onUpdate(event:ScriptEvent):Void {
		super.onUpdate(event);

		if (!healthReductionStarted && PlayState.instance != null && PlayState.instance.currentSong.id.toLowerCase() == "black-sun") {
			var maxHpDrainEnabled = true;
			
			if (PlayState.instance.health >= initialMaxHealth - 0.01) {
				healthReductionStarted = true;
				healthReductionTimer = new FlxTimer().start(healthReductionInterval, reduceMaxHealth, 0);
			}
		}
	}
	
	function reduceMaxHealth(timer:FlxTimer):Void {
		if (PlayState.instance == null || PlayState.instance.isGamePaused) {
			return;
		}
		
		currentMaxHealth -= healthReductionRate;
		
		if (currentMaxHealth < 0.2) {
			currentMaxHealth = 0.2;
		}
		
		if (PlayState.instance.health > currentMaxHealth) {
			PlayState.instance.health = currentMaxHealth;
		}
		
		if (PlayState.instance.healthBar != null) {
			PlayState.instance.healthBar.max = currentMaxHealth;
		}
	}
	
	override function onDestroy(event:ScriptEvent):Void {
		if (healthReductionTimer != null) {
			healthReductionTimer.cancel();
			healthReductionTimer = null;
		}
		super.onDestroy(event);
	}
}
