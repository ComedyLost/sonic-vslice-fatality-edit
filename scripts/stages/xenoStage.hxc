import flixel.FlxG;
import flixel.tweens.FlxEase;
import flixel.tweens.FlxTween;
import funkin.audio.FunkinSound;
import funkin.graphics.FunkinSprite;
import funkin.Paths;
import funkin.play.PlayState;
import funkin.play.stage.Stage;
import funkin.modding.module.ModuleHandler;
import funkin.util.Constants;
import funkin.ui.FullScreenScaleMode;

import funkin.play.character.CharacterDataParser;
import funkin.play.character.CharacterType;
import funkin.play.components.HealthIcon;

// Rewrote the entire script because 0.7.0 broke half of the old one
// It's a lot more readable and organized now though

class XenoStage extends Stage
{
	final cutoutSize = FullScreenScaleMode.gameCutoutSize.x / 2.5;

    public var originalPlayerStrumlineX:Float = (FlxG.width / 2 + Constants.STRUMLINE_X_OFFSET) + (cutoutSize / 2.0);
	public var originalOpponentStrumlineX:Float = Constants.STRUMLINE_X_OFFSET + cutoutSize;

    var tailsJump:FunkinSprite;
	var knucklesJump:FunkinSprite;
	var eggmanJump:FunkinSprite;

	public function new()
	{
		super('xenoStage');
	}

	override function onCreate(event:ScriptEvent):Void
	{
		super.onCreate(event);

		if (!PlayState.instance.currentSong.id.toLowerCase() == "triple-trouble") return;

		FunkinSprite.cacheTexture(Paths.image('Xenostage/P3_Stat'));
		FunkinSprite.cacheTexture(Paths.image('Tails'));
		FunkinSprite.cacheTexture(Paths.image('Knuckles'));
		FunkinSprite.cacheTexture(Paths.image('Eggman'));

		enableJumpscare = ModuleHandler.getModule("EXEOptions").scriptGet("dojumpscares");
		mobile = FlxG.onMobile;

		tailsJump = FunkinSprite.create(0, 0, 'Tails');
		tailsJump.cameras = [PlayState.instance.camHUD];
		tailsJump.alpha = 0;
		PlayState.instance.add(tailsJump);

		knucklesJump = FunkinSprite.create(0, 0, 'Knuckles');
		knucklesJump.cameras = [PlayState.instance.camHUD];
		knucklesJump.alpha = 0;
		PlayState.instance.add(knucklesJump);

		eggmanJump = FunkinSprite.create(0, 0, 'Eggman');
		eggmanJump.cameras = [PlayState.instance.camHUD];
		eggmanJump.alpha = 0;
		PlayState.instance.add(eggmanJump);
		
		screenGlitch1 = FunkinSprite.create(-600, -200);
        screenGlitch1.frames = Paths.getSparrowAtlas('Xenostage/P3_Stat');
        screenGlitch1.scrollFactor.set(1, 1);
        screenGlitch1.scale.set(5.5, 5.5);
        screenGlitch1.animation.addByPrefix('busk', 'Phase3Static instance 1', 34, false); // org. framerate is 36 // 24 (base game)
        screenGlitch1.animation.play('busk');
        screenGlitch1.zIndex = 20;
		screenGlitch1.visible = false;
		screenGlitch1.animation.finishCallback = function() {
            screenGlitch1.visible = false;
        };
		PlayState.instance.add(screenGlitch1);
	}

	override function buildStage()
	{
		super.buildStage();
	}

	function switchToXeno():Void {
		var p3_Stats = getNamedProp('p3_Stats');
		var p3_Glitch = getNamedProp('p3_Glitch');

		p3_Stats.zIndex = 4;
        p3_Glitch.zIndex = 1;

		PlayState.instance.currentStage.refresh(); // Refresh the stage to apply the zindex
	}

	function resetStage():Void {
		var p3_Stats = getNamedProp('p3_Stats');
		var p3_Glitch = getNamedProp('p3_Glitch');

		p3_Stats.zIndex = 1;
		p3_Glitch.zIndex = 3;

		PlayState.instance.currentStage.refresh();
	}

	function swapStrumlines():Void {
		if (mobile) return;

		PlayState.instance.playerStrumline.x = originalOpponentStrumlineX;
		PlayState.instance.opponentStrumline.x = originalPlayerStrumlineX;
	}

	function resetStrumlines():Void {
		if (mobile) return;

		PlayState.instance.playerStrumline.x = originalPlayerStrumlineX;
		PlayState.instance.opponentStrumline.x = originalOpponentStrumlineX;
	}

	function doJumpscare(jumpscareType:String):Void {
		if (!enableJumpscare) return;

		switch (jumpscareType) {
			case 'tails':
				tailsJump.alpha = 1;
				FlxTween.tween(tailsJump, { alpha: 0 }, 1.5);
				FunkinSound.playOnce(Paths.sound("TailsScreamLOL"), 0.4);
			case 'knuckles':
				knucklesJump.alpha = 1;
				FlxTween.tween(knucklesJump, { alpha: 0 }, 1.5);
				FunkinSound.playOnce(Paths.sound("KnucklesScreamLOL"), 0.4);
			case 'eggman':
				eggmanJump.alpha = 1;
				FlxTween.tween(eggmanJump, { alpha: 0 }, 1.5);
				FunkinSound.playOnce(Paths.sound("EggmanScreamLOL"), 0.4);
			default:
				return;
		}
	}

	function startStaticTransition():Void {
		screenGlitch1.visible = true;
		screenGlitch1.animation.play('busk');
	}

	function onStepHit(event:SongTimeScriptEvent):Void
	{
		super.onStepHit(event);

		if (!PlayState.instance.currentSong.id.toLowerCase() == "triple-trouble") return;

		if (event.step == 4)
		{
			startStaticTransition();
		}
		if (event.step == 151)
		{
			doJumpscare('tails');
		}
		if (event.step == 1029) {
			startStaticTransition();
		}
		if (event.step == 1038) {
			switchToXeno();
			//switchCharacter('bf-thirdperson');
			//switchCharacter('sonic-beast');
		}
		if (event.step == 1094) {
			startStaticTransition();			
		}
		if (event.step == 1221) {
			startStaticTransition();
		}
		if (event.step == 1285) {
			startStaticTransition();
		}
		if (event.step == 1296) {
			resetStage();
			swapStrumlines();
			doJumpscare('knuckles');
			//switchCharacter('knux');
			//switchCharacter('bf-invert');
		}
		if (event.step == 2308) {
			startStaticTransition();
		}
		if (event.step == 2320) {
			switchToXeno();
		    //switchCharacter('sonic-beast-invert');
			//switchCharacter('bf-thirdperson-flip');
		}
		if (event.step == 2820) {
			startStaticTransition();
		}
		if (event.step == 2824) {
			resetStage();
            resetStrumlines();
			doJumpscare('eggman');
			//switchCharacter('eggy');
			//switchCharacter('bf');
		}
		if (event.step == 3160) {
			startStaticTransition();
		}
		if (event.step == 3384) {
			startStaticTransition();
		}
		if (event.step == 3947) {
			startStaticTransition();
		}
		if (event.step == 3957) {
			switchToXeno();
			//switchCharacter('bf-thirdperson');
			//switchCharacter('sonic-beast');
		}
		if (event.step == 4850) {
			startStaticTransition();
	    }
	}
	override function onSongRetry(event:ScriptEvent):Void {
		super.onSongRetry(event);

		resetStage();
		resetStrumlines();
	}
}